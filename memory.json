{
  "entities": [
    {
      "name": "default_user",
      "entityType": "person",
      "observations": [
        "Interested in AI technology",
        "Working on a project called Trenching_QC",
        "Name is Tom Downs",
        "Works as a hydrographic surveyor"
      ]
    },
    {
      "name": "CBAtool",
      "entityType": "project",
      "observations": [
        "Full name: Cable Burial Analysis Tool",
        "Python application for analyzing cable burial depth data and position quality",
        "Enables users to identify non-compliant sections, detect anomalies, and generate interactive visualizations and reports",
        "Current status: Development in progress with several critical issues being addressed",
        "Features include depth analysis, position analysis, and report generation",
        "Produces Excel and PDF reports"
      ]
    },
    {
      "name": "Development_Issues",
      "entityType": "information",
      "observations": [
        "There were git workflow problems due to not merging feature branches back into develop branch",
        "UI needs improvements for better functionality and usability",
        "Visualizations require significant improvements",
        "Report generation functionality is implemented but needs enhancement",
        "Various issues are being tracked including DataFrame Ambiguity, PDF Generation, Report Consolidation, UI improvements"
      ]
    },
    {
      "name": "Project_Status",
      "entityType": "information",
      "observations": [
        "As of March 20, 2025, documentation and refactoring preparation phase completed",
        "March 14, 2025: Reporting functionality issues identified - PDF summary not getting populated, missing data from Excel sheets",
        "March 13, 2025: UI improvements made including coordinate column selection interface",
        "March 12, 2025: Significant progress in architectural foundation with implementation of BaseAnalyzer abstract class",
        "The project is transitioning from feature development to systematic code improvement"
      ]
    },
    {
      "name": "Development_Principles",
      "entityType": "information",
      "observations": [
        "Project follows DRY (Don't Repeat Yourself) principle",
        "Project follows KISS (Keep It Simple, Stupid) principle",
        "Project follows YAGNI (You Aren't Gonna Need It) principle",
        "Project adheres to SOLID principles for maintainable and scalable code",
        "Goal is to achieve enterprise-grade code",
        "Always strive for enterprise grade code",
        "Always attempt to achieve the user's request with minimal functional code lines",
        "Always ask before writing to file",
        "Do not change any files without permission",
        "Do not delete files without permission",
        "Always explain the scope and impact of proposed changes before implementation",
        "Never delete or completely overwrite existing code without explicit confirmation",
        "Create backups or suggest version control checkpoints before making significant changes",
        "Make surgical changes when possible instead of rewriting entire files",
        "Study and understand existing code patterns before suggesting changes",
        "Generate tests before or alongside code changes",
        "Document all changes made to the codebase",
        "Prioritize readability and maintainability over clever solutions",
        "Verify understanding of requirements before suggesting solutions",
        "Respect the project's branching strategy and git workflow",
        "Ensure error handling is robust in suggested code",
        "Consider edge cases and potential failure modes in implementations",
        "Explain the reasoning behind significant or complex changes",
        "Suggest changes in a diff format first to allow review when appropriate",
        "Break down large changes into smaller, reviewable steps"
      ]
    },
    {
      "name": "AI_Coding_Safety_Principles",
      "entityType": "information",
      "observations": [
        "Principles designed to prevent AI assistants from damaging codebases",
        "Addresses issues where AI might make unauthorized large-scale changes",
        "Prevents overwriting critical files without permission",
        "Encourages testing and proper documentation",
        "Promotes careful, thoughtful changes with verification steps"
      ]
    }
  ],
  "relations": [
    {
      "from": "default_user",
      "to": "CBAtool",
      "relationType": "develops"
    },
    {
      "from": "CBAtool",
      "to": "Development_Issues",
      "relationType": "has"
    },
    {
      "from": "CBAtool",
      "to": "Project_Status",
      "relationType": "has"
    },
    {
      "from": "CBAtool",
      "to": "Development_Principles",
      "relationType": "follows"
    },
    {
      "from": "Development_Principles",
      "to": "AI_Coding_Safety_Principles",
      "relationType": "includes"
    }
  ]
}