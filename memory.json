{
  "entities": [
    {
      "name": "default_user",
      "entityType": "person",
      "observations": [
        "Interested in AI technology",
        "Working on a project called Trenching_QC",
        "Name is Tom Downs",
        "Works as a hydrographic surveyor"
      ]
    },
    {
      "name": "CBAtool",
      "entityType": "project",
      "observations": [
        "Full name: Cable Burial Analysis Tool",
        "Python application for analyzing cable burial depth data and position quality",
        "Enables users to identify non-compliant sections, detect anomalies, and generate interactive visualizations and reports",
        "Current status: Development in progress with several critical issues being addressed",
        "Features include depth analysis, position analysis, and report generation",
        "Produces Excel and PDF reports",
        "A comprehensive code review identified several critical issues that need to be addressed before production deployment.",
        "The most urgent priorities are implementing a testing framework, harmonizing analyzer classes, restructuring the UI application, and refactoring the report generator.",
        "The project is transitioning from feature development to systematic code improvement."
      ]
    },
    {
      "name": "Development_Issues",
      "entityType": "information", 
      "observations": [
        "There were git workflow problems due to not merging feature branches back into develop branch",
        "UI needs improvements for better functionality and usability",
        "Visualizations require significant improvements",
        "Report generation functionality is implemented but needs enhancement",
        "Various issues are being tracked including DataFrame Ambiguity, PDF Generation, Report Consolidation, UI improvements",
        "Key issues include DataFrame Ambiguity, PDF Generation, Report Consolidation, Temporal Comparison, Analyzer SRP Violation, UI Missing Functionality, UI Improvements.",
        "DataFrame Ambiguity, PDF Generation, Report Consolidation issues have been completed.",
        "Temporal Comparison, UI Missing Functionality, UI Improvements have been started."
      ]
    },
    {
      "name": "Project_Status",
      "entityType": "information",
      "observations": [
        "As of March 20, 2025, documentation and refactoring preparation phase completed",
        "March 14, 2025: Reporting functionality issues identified - PDF summary not getting populated, missing data from Excel sheets",
        "March 13, 2025: UI improvements made including coordinate column selection interface",
        "March 12, 2025: Significant progress in architectural foundation with implementation of BaseAnalyzer abstract class",
        "The project is transitioning from feature development to systematic code improvement",
        "March 21, 2025: Worker extraction phase completed, significantly improving CBAtool's architectural foundation.",
        "March 20, 2025: Documentation and Refactoring Preparation phase completed. Significant progress has been made in documenting the refactoring strategy.",
        "Key focus areas are comprehensive testing of new worker implementations, UI component modularization, documentation updates for new architecture."
      ]
    },
    {
      "name": "Development_Principles",
      "entityType": "information",
      "observations": [
        "Project follows DRY (Don't Repeat Yourself) principle",
        "Project follows KISS (Keep It Simple, Stupid) principle",
        "Project follows YAGNI (You Aren't Gonna Need It) principle", 
        "Project adheres to SOLID principles for maintainable and scalable code",
        "Goal is to achieve enterprise-grade code",
        "Always strive for enterprise grade code",
        "Always attempt to achieve the user's request with minimal functional code lines",
        "Always ask before writing to file",
        "Do not change any files without permission",
        "Do not delete files without permission",
        "Always explain the scope and impact of proposed changes before implementation",
        "Never delete or completely overwrite existing code without explicit confirmation",
        "Create backups or suggest version control checkpoints before making significant changes",
        "Make surgical changes when possible instead of rewriting entire files", 
        "Study and understand existing code patterns before suggesting changes",
        "Generate tests before or alongside code changes",
        "Document all changes made to the codebase",
        "Prioritize readability and maintainability over clever solutions",
        "Verify understanding of requirements before suggesting solutions",
        "Respect the project's branching strategy and git workflow",
        "Ensure error handling is robust in suggested code",
        "Consider edge cases and potential failure modes in implementations",
        "Explain the reasoning behind significant or complex changes",
        "Suggest changes in a diff format first to allow review when appropriate",
        "Break down large changes into smaller, reviewable steps",
        "Aim for enterprise grade code"
      ]
    },
    {
      "name": "AI_Coding_Safety_Principles",
      "entityType": "information",
      "observations": [
        "Principles designed to prevent AI assistants from damaging codebases",
        "Addresses issues where AI might make unauthorized large-scale changes",
        "Prevents overwriting critical files without permission",
        "Encourages testing and proper documentation",
        "Promotes careful, thoughtful changes with verification steps"
      ]
    },
    {
      "name": "CBAtool_Architecture",
      "entityType": "information",
      "observations": [
        "Implements a class hierarchy with BaseAnalyzer as an abstract base class",
        "Specialized analyzer classes include DepthAnalyzer and PositionAnalyzer",
        "Uses worker pattern for background processing of analysis operations",
        "Visualization components utilize Plotly for interactive HTML-based plots",
        "Reporting system generates both Excel workbooks and PDF summaries",
        "UI built with Tkinter using a component-based design",
        "Configuration management using JSON-based storage in user Documents folder",
        "Module structure follows core, ui, and utils separation of concerns"
      ]
    },
    {
      "name": "Recent_Achievements",
      "entityType": "information",
      "observations": [
        "March 2025: Worker extraction phase completed, improving architectural foundation",
        "March 2025: Coordinate column support implemented for both lat/lon and easting/northing",
        "March 2025: Configuration management system implemented with save/load functionality",
        "March 2025: Standardized BaseAnalyzer abstract class implemented",
        "March 2025: UI improvements including coordinate column selectors added",
        "March 2025: Complete analysis workflow implemented combining depth and position analysis"
      ]
    },
    {
      "name": "Reporting_System",
      "entityType": "information",
      "observations": [
        "Generates comprehensive Excel reports with multiple sheets for different analysis aspects",
        "Creates PDF summary reports with key findings and recommendations",
        "Current issues include empty PDF reports and missing data in Excel sheets",
        "Uses a standardized data structure for consistency across report types",
        "Implements severity classification (High, Medium, Low) for findings",
        "Generates actionable recommendations based on analysis results",
        "Links to interactive visualizations for detailed exploration",
        "Being enhanced to support multiple analysis types (Depth, Position, Combined)"
      ]
    },
    {
      "name": "Development_Workflow",
      "entityType": "information",
      "observations": [
        "Uses a three-tier branching strategy: main (stable), develop (integration), feature branches",
        "Follows conventional commit format for clear change documentation",
        "Classifies improvements by size (Small, Medium, Large), impact, and priority",
        "Implements iterative, incremental improvement approach",
        "Records architectural decisions in ADRs (Architectural Decision Records)",
        "Maintains improvement trackers for significant changes",
        "Conducts systematic code reviews using standardized criteria",
        "Documents changes in a structured changelog"
      ]
    },
    {
      "name": "Current_Priorities",
      "entityType": "information",
      "observations": [
        "Fix reporting functionality issues including empty PDF reports and Excel formatting",
        "Implement comprehensive testing for the new architecture and worker implementation",
        "Complete UI component modularization for better maintainability",
        "Standardize error handling across all components",
        "Improve position analysis with better coordinate system support",
        "Enhance documentation with updated architecture diagrams and component descriptions",
        "Address technical debt in older components that haven't been refactored",
        "Improve test coverage across the codebase"
      ]
    }
  ],
  "relations": [
    {
      "from": "default_user",
      "to": "CBAtool",
      "relationType": "develops"
    },
    {
      "from": "CBAtool",
      "to": "Development_Issues",
      "relationType": "has"
    },
    {
      "from": "CBAtool",
      "to": "Project_Status",
      "relationType": "has"
    },
    {
      "from": "CBAtool",
      "to": "Development_Principles",
      "relationType": "follows"
    },
    {
      "from": "Development_Principles",
      "to": "AI_Coding_Safety_Principles",
      "relationType": "includes"
    },
    {
      "from": "CBAtool", 
      "to": "CBAtool_Architecture",
      "relationType": "implements"
    },
    {
      "from": "CBAtool",
      "to": "Recent_Achievements",
      "relationType": "achieved"
    },
    {
      "from": "CBAtool",
      "to": "Reporting_System",
      "relationType": "includes"
    },
    {
      "from": "CBAtool",
      "to": "Development_Workflow",
      "relationType": "follows"
    },
    {
      "from": "CBAtool",
      "to": "Current_Priorities",
      "relationType": "focuses on"
    },
    {
      "from": "Development_Issues",
      "to": "Reporting_System",
      "relationType": "impacts"
    },
    {
      "from": "Development_Workflow",
      "to": "Development_Principles",
      "relationType": "implements"
    },
    {
      "from": "Current_Priorities",
      "to": "Reporting_System",
      "relationType": "addresses"
    }
  ]
}